name: Build and Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: xt0rted/setup-dotnet@v1.0.0
        with:
          dotnet-version: 6.0.300

      - name: Check .NET version
        run: |
          dotnet --version

      - name: Build the .NET roject
        run: |
          dotnet build --configuration Release

      - name: Publish the .NET Project
        run: |
          dotnet publish -c Release -o public

      - name: Verify Public folder
        run: ls -la public
     
      - name: Upload public folder as Package
        uses: actions/upload-artifact@v3
        with:
          name: public-package
          path: public

      - name: Zip the public folder
        run: zip -r public.zip public/

      - name: Check weather Zip file is created or not
        run: ls -la public.zip

      - name: Upload to jfrog
        run: 
          curl -H "X-JFrog-Art-Api:${{secrets.JFROG_API_KEY}}" -T public.zip "https://trialaaa.jfrog.io/artifactory/jfrogintel27june2022-generic-local/public-$GITHUB_RUN_NUMBER.zip"
          #curl -H "X-JFrog-Art-Api:${{secrets.JFROG_API_KEY}}" -T public.zip "https://trialaaa.jfrog.io/artifactory/jfrogintel27june2022-generic-local/public-latest.zip"
          #curl -H "X-JFrog-Art-Api:${{secrets.JFROG_API_KEY}}" -T public.zip "https://trialaaa.jfrog.io/artifactory/jfrogintel27june2022-generic-local/public.zip"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      #- name: Download
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: public-package
      #    path: public

      - name: Download from jfrog
        run: curl -L -H "X-JFrog-Art-Api:${{secrets.JFROG_API_KEY}}" -O "https://trialaaa.jfrog.io/artifactory/jfrogintel27june2022-generic-local/public-$GITHUB_RUN_NUMBER.zip"

      - name: Check what is downloaded
        run: ls -la

      #- name: Unzip
      #  run: |
      #    pwd
      #    unzip public-$GITHUB_RUN_NUMBER.zip
      #    ls

      - name: copy public to ubuntu
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          local: 'public-'${{$GITHUB_RUN_NUMBER}}'.zip'                                                  # Local file path - REQUIRED false - DEFAULT ./
          remote: ''                                                 # Remote file path - REQUIRED false - DEFAULT ~/
          host: ${{secrets.REMOTE_HOST}}                                      # Remote server address - REQUIRED true
          #port: ${{secrets.PORT}}                                      # Remote server port - REQUIRED false - DEFAULT 22
          user: ${{secrets.REMOTE_USER}}                                      # Remote server user - REQUIRED true
          password: ${{secrets.PASSWORD}}                              # User password - REQUIRED at least one of "password" or "key" 
          #key: ${{secrets.SSH_PRIVATEKEY}}                                        # Remote server private key - REQUIRED at least one of "password" or "key" 
          #pre_upload: sudo rm -rf /var/www/html/*  # Command to run via ssh before scp upload - REQUIRED false
          post_upload: dir  # Command to run via ssh after scp upload - REQUIRED false
          ssh_options: -o StrictHostKeyChecking=no                     # A set of ssh_option separated by -o - REQUIRED false - DEFAULT -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
          #scp_options: -v    